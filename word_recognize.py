# -*- coding: utf-8 -*-
"""word_recognize.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NyFuLR3mv9QrnnMbzQYvhnGhF5ZUq5jN
"""

from google.colab import drive
drive.mount('/content/drive')

"""# Install"""

!pip install vietocr==0.3.5

! pip install --quiet vietocr==0.3.2

!pip install "paddleocr>=2.0.1"

!pip install paddlepaddle

!pip install pymupdf

"""# Library"""

import matplotlib.pyplot as plt
from PIL import Image

from vietocr.tool.predictor import Predictor
from vietocr.tool.config import Cfg

import io
import cv2
import numpy as np
from PIL import Image
import sys
import pandas as pd
import fitz
from tqdm import tqdm

config = Cfg.load_config_from_name('vgg_seq2seq')
# config['weights'] = 'https://drive.google.com/uc?id=13327Y1tz1ohsm5YZMyXVMPIOjoOA0OaA'
# config['cnn']['pretrained']=False
config['predictor']['beamsearch']=False

detector = Predictor(config)

import time
from paddleocr import PaddleOCR
ocr = PaddleOCR(use_angle_cls=True, lang='en') # need to run only once to download and load model into memory

def img2text(img):
  
  # Input: PIL image
  # Output: a dataframe with bounding box and text

  # Paddle only get input as image path
  img.save('Draft.png')

  # Detect line
  result = ocr.ocr('Draft.png', rec=False)
  result.reverse()

  # Get bbox
  xs = []
  ys = []
  ws = []
  hs = []
  list_text = []

  # Create df
  for line in result:
      bbox = (line[0][0]-5, line[0][1]-5, line[2][0]+5, line[2][1]+5);
      xs.append(bbox[0])
      ys.append(bbox[1])
      ws.append(bbox[2])
      hs.append(bbox[3])

      new_image = img.crop(bbox)
      list_text.append(detector.predict(new_image))
  bbox_df = pd.DataFrame({'x':xs, 'y':ys, 'w':ws, 'h':hs, 'text': list_text})
  return bbox_df

def pdfimage2text(file):
  doc = fitz.Document(file)
  image_matrix = fitz.Matrix(1,1)
  pages = doc.pageCount
  block_df = pd.DataFrame()
  for num_page in range(pages):
    pix = doc[num_page].getPixmap(alpha = False, matrix=image_matrix)
    img = Image.frombytes("RGB", [pix.width, pix.height], pix.samples)
    block_df = pd.concat([block_df, img2text(img)])
  return block_df

import time
start = time.time()
img_path = '/content/drive/MyDrive/Image CVs/cvSample4.pdf'
pdfimage2text(img_path)
print(time.time()-start)